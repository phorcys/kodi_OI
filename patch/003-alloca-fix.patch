diff --git a/xbmc/Util.cpp b/xbmc/Util.cpp
index c96b774..58d27ac 100644
--- a/xbmc/Util.cpp
+++ b/xbmc/Util.cpp
@@ -42,7 +42,9 @@
 #endif
 #include <stdlib.h>
 #include <algorithm>
-
+#if defined(TARGET_SOLARIS)
+#include <alloca.h>
+#endif
 #include "Application.h"
 #include "Util.h"
 #include "filesystem/PVRDirectory.h"
diff --git a/xbmc/cores/DllLoader/DllLoader.cpp b/xbmc/cores/DllLoader/DllLoader.cpp
index 01f8e9a..f046d06 100644
--- a/xbmc/cores/DllLoader/DllLoader.cpp
+++ b/xbmc/cores/DllLoader/DllLoader.cpp
@@ -34,7 +34,9 @@ extern "C" FILE *fopen_utf8(const char *_Filename, const char *_Mode);
 #else
 #define fopen_utf8 fopen
 #endif
-
+#if defined(TARGET_SOLARIS)
+#include <alloca.h>
+#endif
 #include "commons/Exception.h"
 
 #define DLL_PROCESS_DETACH   0
@@ -52,7 +54,7 @@ extern "C" FILE *fopen_utf8(const char *_Filename, const char *_Mode);
 typedef BOOL (APIENTRY *EntryFunc)(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved);
 
 
-#ifdef TARGET_POSIX
+#if defined(TARGET_POSIX)
 /*
  * This is a dirty hack.
  * The win32 DLLs contain an alloca routine, that first probes the soon
@@ -671,7 +673,7 @@ bool DllLoader::Load()
     /* since we are handing execution over to unknown code, safeguard here */
     try
     {
-#ifdef TARGET_POSIX
+#if defined(TARGET_POSIX) && !defined(TARGET_SOLARIS)
 	extend_stack_for_dll_alloca();
 #endif
       initdll((HINSTANCE)hModule, DLL_PROCESS_ATTACH , 0); //call "DllMain" with DLL_PROCESS_ATTACH